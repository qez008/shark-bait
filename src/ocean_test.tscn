[gd_scene load_steps=21 format=2]

[ext_resource path="res://shaders/gertsnerwaves.gdshader" type="Shader" id=1]
[ext_resource path="res://src/vessel/TestBoat.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/ocean_test.gd" type="Script" id=3]
[ext_resource path="res://src/waves.gd" type="Script" id=4]
[ext_resource path="res://src/floater.gd" type="Script" id=5]
[ext_resource path="res://shaders/detailed_water_surface.gdshader" type="Shader" id=6]

[sub_resource type="ProceduralSky" id=43]
sky_top_color = Color( 0.0862745, 0.309804, 0.545098, 1 )
sky_horizon_color = Color( 0.4, 0.752941, 0.890196, 1 )
ground_bottom_color = Color( 0.027451, 0.0431373, 0.0588235, 1 )
ground_horizon_color = Color( 0.0705882, 0.494118, 0.698039, 1 )
ground_curve = 0.105561
sun_color = Color( 0.972549, 0.937255, 0.858824, 1 )
sun_latitude = 47.36
sun_longitude = -91.76

[sub_resource type="Environment" id=41]
background_mode = 2
background_sky = SubResource( 43 )
ambient_light_color = Color( 0.152941, 0.152941, 0.219608, 1 )
ambient_light_energy = 13.33
ambient_light_sky_contribution = 0.79

[sub_resource type="ViewportTexture" id=25]
viewport_path = NodePath("Viewport")

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = ExtResource( 1 )
shader_param/line_color = Color( 0.243137, 0.792157, 0.741176, 1 )
shader_param/fill_color = Color( 0.101961, 0.254902, 0.392157, 1 )
shader_param/wave_a = Vector3( 1.61, 74.956, 0.116 )
shader_param/wave_b = Vector3( 1.994, 36.31, 0.156 )
shader_param/wave_c = Vector3( 1.266, 21.954, 0.152 )
shader_param/wave_d = Vector3( 1.508, 12.934, 0.212 )
shader_param/synced_time = 0.0
shader_param/wave_offset = Vector3( 0, 0, 0 )
shader_param/distance_fade_min = 90.0
shader_param/distance_fade_max = 70.0
shader_param/noise_pattern = SubResource( 25 )

[sub_resource type="PlaneMesh" id=3]
material = SubResource( 11 )
size = Vector2( 300, 300 )
subdivide_width = 100
subdivide_depth = 100

[sub_resource type="ShaderMaterial" id=44]
shader = ExtResource( 6 )
shader_param/NUM_OCTAVES = 2
shader_param/num_lines = 16.0
shader_param/line_width = 0.086
shader_param/noise_scale = 32.474
shader_param/seed = 0.0
shader_param/y_off = -0.5
shader_param/line_color = Color( 0.14902, 0.607843, 0.803922, 1 )
shader_param/fill_color = Color( 0, 0.1, 0.1, 1 )
shader_param/wave_a = Vector3( 0, 1, 0 )
shader_param/wave_b = Vector3( 0, 1, 0 )
shader_param/wave_c = Vector3( 0, 1, 0 )
shader_param/wave_d = Vector3( 0, 1, 0 )
shader_param/synced_time = 0.0
shader_param/wave_offset = Vector3( 0, 0, 0 )
shader_param/mesh_size = 60.0

[sub_resource type="PlaneMesh" id=37]
material = SubResource( 44 )
size = Vector2( 60, 60 )
subdivide_width = 40
subdivide_depth = 40

[sub_resource type="ShaderMaterial" id=38]
shader = ExtResource( 6 )
shader_param/NUM_OCTAVES = 2
shader_param/num_lines = 10.314
shader_param/line_width = 0.04
shader_param/noise_scale = 16.054
shader_param/seed = 0.126
shader_param/y_off = -2.0
shader_param/line_color = Color( 0.027451, 0.14902, 0.345098, 1 )
shader_param/fill_color = Color( 0, 0.1, 0.1, 1 )
shader_param/wave_a = Vector3( 0, 1, 0 )
shader_param/wave_b = Vector3( 0, 1, 0 )
shader_param/wave_c = Vector3( 0, 1, 0 )
shader_param/wave_d = Vector3( 0, 1, 0 )
shader_param/synced_time = 0.0
shader_param/wave_offset = Vector3( 0, 0, 0 )
shader_param/mesh_size = 60.0

[sub_resource type="PlaneMesh" id=39]
material = SubResource( 38 )
size = Vector2( 60, 60 )
subdivide_width = 40
subdivide_depth = 40

[sub_resource type="SpatialMaterial" id=42]
flags_vertex_lighting = true
albedo_color = Color( 0.666667, 0.223529, 0.717647, 1 )

[sub_resource type="SphereMesh" id=6]
material = SubResource( 42 )
radius = 0.2
height = 0.4

[sub_resource type="Shader" id=32]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.2.stable's SpatialMaterial.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,vertex_lighting;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float distance_fade_min;
uniform float distance_fade_max;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	ROUGHNESS=roughness;
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	{
		float fade_distance=-VERTEX.z;
		float fade=clamp(smoothstep(distance_fade_min,distance_fade_max,fade_distance),0.0,1.0);
		int x = int(FRAGCOORD.x) % 4;
		int y = int(FRAGCOORD.y) % 4;
		int index = x + y * 4;
		float limit = 0.0;

		if (x < 8) {
			if (index == 0) limit = 0.0625;
			if (index == 1) limit = 0.5625;
			if (index == 2) limit = 0.1875;
			if (index == 3) limit = 0.6875;
			if (index == 4) limit = 0.8125;
			if (index == 5) limit = 0.3125;
			if (index == 6) limit = 0.9375;
			if (index == 7) limit = 0.4375;
			if (index == 8) limit = 0.25;
			if (index == 9) limit = 0.75;
			if (index == 10) limit = 0.125;
			if (index == 11) limit = 0.625;
			if (index == 12) limit = 1.0;
			if (index == 13) limit = 0.5;
			if (index == 14) limit = 0.875;
			if (index == 15) limit = 0.375;
		}

	if (fade < limit)
		discard;
	}

}
"

[sub_resource type="ShaderMaterial" id=33]
shader = SubResource( 32 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/distance_fade_min = 80.0
shader_param/distance_fade_max = 50.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )

[sub_resource type="CubeMesh" id=31]
material = SubResource( 33 )
size = Vector3( 10, 10, 10 )

[node name="ocean_test" type="Spatial"]
script = ExtResource( 3 )
general_surface = NodePath("ocean_surface")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 41 )

[node name="ocean_surface" type="MeshInstance" parent="."]
mesh = SubResource( 3 )
material/0 = null
script = ExtResource( 4 )
is_master = true

[node name="test_mesh" type="MeshInstance" parent="."]
mesh = SubResource( 37 )
skeleton = NodePath("")
material/0 = null
script = ExtResource( 4 )

[node name="test_mesh2" type="MeshInstance" parent="."]
mesh = SubResource( 39 )
skeleton = NodePath("")
material/0 = null
script = ExtResource( 4 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.532256, 0.846583, 0, -0.846583, 0.532256, 0, 3.1185, 1.58938 )

[node name="floater" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.21186, 0, 6.60928 )
mesh = SubResource( 6 )
material/0 = null
script = ExtResource( 5 )

[node name="floater2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 8.89477, 0, 6.60928 )
mesh = SubResource( 6 )
material/0 = null
script = ExtResource( 5 )

[node name="floater3" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.21186, 0, 8.28983 )
mesh = SubResource( 6 )
material/0 = null
script = ExtResource( 5 )

[node name="floater4" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 8.89477, 0, 8.28983 )
mesh = SubResource( 6 )
material/0 = null
script = ExtResource( 5 )

[node name="InterpolatedCamera" type="InterpolatedCamera" parent="."]
transform = Transform( -4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -3.9123, 1.47195, 0 )
current = true
fov = 82.0
target = NodePath("../TestBoat/camera_rotor/camera_target")
speed = 2.0
enabled = true

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 13.489, -1.13476, -13.0816 )
mesh = SubResource( 31 )
material/0 = null

[node name="TestBoat" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -15.8116, 0 )
angular_damp = 4.0
camera_yaw = true

[editable path="TestBoat"]
